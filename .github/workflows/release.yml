on:
  # debug build
  push:
    branches: "**"
  pull_request: 
    types:
      - opened
      - edited

  # release build
  release:
    types: [created]

jobs:
  build:
    name: ${{ github.event_name == 'release' && 'release' || 'build' }} ${{ matrix.target }}
    runs-on:  ${{ matrix.build_os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            build_os: windows-latest
            archive: zip
            extra_files: gdsfx-audio/include/windows/fmod.dll
          - target: x86_64-unknown-linux-musl
            build_os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
            run: sudo apt-get -y install libglib2.0-dev pkg-config libssl-dev libatk1.0-0 libgtk-3-dev
          - target: x86_64-apple-darwin
            build_os: macos-latest
            archive: zip
    steps:
      # dependencies for the linux build (this is done uselessly on any platform that doesn't compile to linux)
      - run: ${{ matrix.run }}

      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: ${{ matrix.extra_files }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          TOOLCHAIN_VERSION: nightly
          UPLOAD_MODE: ${{ github.event_name == 'release' && 'release' || 'none' }}
